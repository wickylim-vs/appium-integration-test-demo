name: Appium Integration Test Demo
# on: [push, pull_request]
jobs:
  sonarqube-scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  create-and-upload-ipa:
    runs-on: macos-latest
    needs: sonarqube-scan
    outputs:
      browserstack_app_url: ${{ steps.upload.outputs.app_url }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Use flutter CLI
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.3'
          channel: 'stable'
      - name: Build iOS app
        run: flutter build ios --release --no-codesign
      - name: Compress iOS app to create ipa file
        run: |
          mkdir Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r MyApp.ipa Payload/
      - id: upload
        name: Upload ipa file to BrowserStack
        run: |
          app_url=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@${PWD}/MyApp.ipa" | jq '.app_url')
          echo "::set-output name=app_url::${app_url}"
  run-integration-test-for-ios:
    runs-on: ubuntu-latest
    needs: create-and-upload-ipa
    env:
      RUN_ON_BROWSERSTACK: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      BROWSERSTACK_APP_ID: ${{ needs.create-and-upload-ipa.outputs.browserstack_app_url }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Run appium test script with environment variables
        run: |
          cd appium
          npm i
          node ios.js
  create-and-upload-apk:
    runs-on: ubuntu-latest
    needs: sonarqube-scan
    outputs:
      browserstack_app_url: ${{ steps.upload.outputs.app_url }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Use flutter CLI
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.3'
          channel: 'stable'
      - name: Build Android apk
        run: flutter build apk --release
      - id: upload
        name: Upload apk file to BrowserStack
        run: |
          app_url=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@${PWD}/build/app/outputs/flutter-apk/app-release.apk" | jq '.app_url')
          echo "::set-output name=app_url::${app_url}"
  run-integration-test-for-android:
    runs-on: ubuntu-latest
    needs: create-and-upload-apk
    env:
      RUN_ON_BROWSERSTACK: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      BROWSERSTACK_APP_ID: ${{ needs.create-and-upload-apk.outputs.browserstack_app_url }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Run appium test script with environment variables
        run: |
          cd appium
          npm i
          node android.js


        
